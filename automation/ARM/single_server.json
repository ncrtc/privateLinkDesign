{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        /*"dnsLabelPrefix": {
        "type": "string",
        "metadata": {
          "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
        }
      },*/
        "windowsOSVersion": {
            "type": "string",
            "defaultValue": "2016-Datacenter",
            "allowedValues": [
                "2008-R2-SP1",
                "2012-Datacenter",
                "2012-R2-Datacenter",
                "2016-Nano-Server",
                "2016-Datacenter-with-Containers",
                "2016-Datacenter",
                "2019-Datacenter"
            ],
            "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A2_v2",
            "metadata": {
                "description": "Size of the virtual machine."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "A virtual network name."
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "description"
            }
        },
        "subnetPrefix": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "description"
            }
        },
        "vnetCIDR": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "description"
            }
        },
        "vmName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "description"
            }
        },
        "timestamp": {
            "type": "string",
            "defaultValue": "[utcNow('hhmm')]",
            "metadata": {
                "description": "description"
            }
        },
        "nodeConfigurationName": {
            "type": "string",
            "metadata": {
                "description": "description"
            }
        },
        "automationAccountName": {
            "type": "string",
            "metadata": {
                "description": "description"
            }
        }
    },
    "variables": {
        "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'sawinvm')]",
        "addressPrefix": "[if(not(empty(parameters('vnetCIDR'))), parameters('vnetCIDR'), '10.0.0.0/16')]",
        "vmName": "[if(not(empty(parameters('vmName'))), parameters('vmName'), concat('vm-dns-', parameters('timestamp')))]",
        "virtualNetworkName": "[if(not(empty(parameters('virtualNetworkName'))), parameters('virtualNetworkName'), 'vnet-mine')]",
        "subnetName": "[if(not(empty(parameters('subnetName'))), parameters('subnetName'), 'snet-standalonedns')]",
        "subnetPrefix": "[if(not(empty(parameters('subnetPrefix'))), parameters('subnetPrefix'), '10.0.0.0/24')]",
        // "publicIPAddressName": "[concat('pip-', variables('vmName'))]",
        "nicName": "[concat('nic-', variables('vmName'))]",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
        "networkSecurityGroupName": "[concat('nsg-', variables('subnetName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-11-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {
            }
        },
        /*{
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2018-11-01",
        "name": "[variables('publicIPAddressName')]",
        "location": "[parameters('location')]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[parameters('dnsLabelPrefix')]"
          }
        }
      },*/
        {
            "comments": "Default Network Security Group for template",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-08-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-3389",
                        "properties": {
                            "priority": 1000,
                            "access": "Allow",
                            "direction": "Inbound",
                            "destinationPortRange": "3389",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "allow-DNS",
                        "properties": {
                            "priority": 100,
                            "access": "Allow",
                            "direction": "Inbound",
                            "destinationPortRange": "53",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2018-11-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-11-01",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-10-01",
            "name": "[variables('vmName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-07-01",
            "name": "[concat(variables('vmName'), '/Microsoft.Powershell.DSC')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
            ],
            "location": "[parameters('location')]",
            "tags": {
                "AutomationAccountARMID": "/subscriptions/8b63fe10-d76a-4f8f-81ce-7a5a8b911779/resourceGroups/tjs-core-it-rg/providers/Microsoft.Automation/automationAccounts/tjsaa01"
            },
            "properties": {
                "autoUpgradeMinorVersion": true,
                "provisioningState": "Succeeded",
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.76",
                "settings": {
                    "configurationArguments": {
                        "RegistrationUrl": "https://cus-agentservice-prod-1.azure-automation.net/accounts/0157a681-4998-4582-b3f3-0572097716b5",
                        "NodeConfigurationName": "StandaloneDnsConditionalForwarderConfig.localhost",
                        "ConfigurationMode": "applyAndMonitor",
                        "RebootNodeIfNeeded": true,
                        "ActionAfterReboot": "continueConfiguration",
                        "AllowModuleOverwrite": false,
                        "ConfigurationModeFrequencyMins": 15,
                        "RefreshFrequencyMins": 30
                    }
                },
                "protectedSettings":{}
            }
        }
    ],
    "outputs": {
        /*"hostname": {
        "type": "string",
        "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
      }*/
    }
}